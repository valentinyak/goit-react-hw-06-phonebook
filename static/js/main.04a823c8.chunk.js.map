{"version":3,"sources":["components/ContactList/ContactItem/ContactItem.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/filter/filter-actions.js","redux/filter/filter-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","initialState","id","shortid","generate","name","number","contactsReducer","createReducer","state","action","payload","filter","contact","changeFilter","filterReducer","_","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootPersistConfig","key","storage","blacklist","contactsPersistConfig","mainReducer","combineReducers","items","rootReducer","contacts","persistReducer","persistedReducer","store","configureStore","reducer","persistor","persistStore","connect","dispatch","contactsActions","type","onClick","e","preventDefault","target","form","nameInput","phoneInput","getState","find","value","alert","ContactItem","className","s","deletBtn","toLowerCase","includes","onDelete","handleDelete","contactId","map","onChange","currentTarget","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.04a823c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deletBtn\":\"ContactItem_deletBtn__34_NX\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const addContact = contact => ({\r\n//   type: 'contacts/add',\r\n//   payload: contact,\r\n// });\r\n\r\n// export const deleteContact = id => ({\r\n//   type: 'contacts/delete',\r\n//   payload: id,\r\n// });\r\n\r\nexport const addContact = createAction('contacts/add');\r\nexport const deleteContact = createAction('contacts/delete');\r\n","import shortid from 'shortid';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact } from './contacts-actions';\r\n\r\nconst initialState = [\r\n  { id: shortid.generate(), name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: shortid.generate(), name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: shortid.generate(), name: 'Eden Clements', number: '645-17-79' },\r\n  { id: shortid.generate(), name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\n// const contactsReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case 'contacts/add':\r\n//       return [...state, action.payload];\r\n\r\n//     case 'contacts/delete':\r\n//       return state.filter(contact => contact.id !== action.payload.id);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst contactsReducer = createReducer(initialState, {\r\n  [addContact]: (state, action) => [...state, action.payload],\r\n  [deleteContact]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload.id),\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export default function changeFilter(value) {\r\n//   return {\r\n//     type: 'filter/changeFilter',\r\n//     payload: value,\r\n//   };\r\n// }\r\n\r\nconst changeFilter = createAction('filter/changeFilter');\r\n\r\nexport default changeFilter;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport changeFilter from './filter-actions';\r\n\r\n// const filterReducer = (state = '', action) => {\r\n//   switch (action.type) {\r\n//     case 'filter/changeFilter':\r\n//       return action.payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default filterReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport filterReducer from './filter/filter-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst rootPersistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n  blacklist: ['contacts'],\r\n};\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage: storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst mainReducer = combineReducers({\r\n  items: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(contactsPersistConfig, mainReducer),\r\n});\r\n\r\nconst persistedReducer = persistReducer(rootPersistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\nimport './ContactForm.module.css';\nimport * as contactsActions from '../../redux/contacts/contacts-actions';\nimport { store } from '../../redux/store';\n\nfunction ContactForm({ addContact }) {\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { nameInput, phoneInput } = e.target.form;\n    const isContactExist = store\n      .getState()\n      .contacts.items.find(\n        contact => contact.name === e.target.form.nameInput.value,\n      );\n\n    if (isContactExist) {\n      alert(`${nameInput.value} is already in contacts`);\n      return;\n    }\n\n    addContact({\n      id: shortid.generate(),\n      name: nameInput.value,\n      number: phoneInput.value,\n    });\n\n    nameInput.value = '';\n    phoneInput.value = '';\n  };\n\n  return (\n    <form>\n      <label>\n        Insert contact name\n        <input type=\"text\" name=\"nameInput\" />\n      </label>\n\n      <label>\n        Insert contact number\n        <input type=\"text\" name=\"phoneInput\" />\n      </label>\n\n      <button type=\"submit\" onClick={handleSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: contact => dispatch(contactsActions.addContact(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nexport default function ContactItem({ contact, onClick }) {\n  const { name, number, id } = contact;\n\n  return (\n    <span>\n      {name}: {number}{' '}\n      <button className={s.deletBtn} id={id} onClick={onClick}>\n        delete\n      </button>\n    </span>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string),\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ContactItem from './ContactItem/ContactItem';\nimport * as contactsActions from '../../redux/contacts/contacts-actions';\nimport { store } from '../../redux/store';\n\nfunction ContactList({ contacts, onDelete }) {\n  const handleDelete = e => {\n    const contactId = store\n      .getState()\n      .contacts.items.find(contact => contact.id === e.target.id);\n\n    onDelete(contactId);\n  };\n\n  return (\n    <ul>\n      {contacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            <ContactItem contact={contact} onClick={handleDelete} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nconst getFilteredContacts = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\nconst mapStateToProps = store => ({\n  contacts: getFilteredContacts(store.contacts.items, store.contacts.filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport changeFilter from '../../redux/filter/filter-actions';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label>\n      Find contact\n      <input type=\"text\" name=\"filterInput\" onChange={onChange} value={value} />\n    </label>\n  );\n}\n\nconst mapStateToProps = state => ({ value: state.contacts.filter });\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n};\n","import React from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport { store, persistor } from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}